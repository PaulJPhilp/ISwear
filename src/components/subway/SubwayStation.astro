---
const { title } = Astro.props;

import { twMerge } from 'tailwind-merge';
import { StationName } from './station/StationName';

// Base offset calculation
const baseOffset = 4;
const scaleFactors = {
  base: 1,    // 4px
  sm: 1.5,    // 6px
  md: 2,      // 8px
  lg: 2.5,    // 10px
  xl: 3       // 12px
}

const getOffset = (breakpoint: keyof typeof scaleFactors) => 
  `${baseOffset * scaleFactors[breakpoint]}px`
---

<div
  class={twMerge(
    'w-full grid items-center gap-2 sm:gap-3 md:gap-4 lg:gap-5 xl:gap-6',
    'grid-cols-[minmax(0,0.5fr),1rem,minmax(0,0.5fr)]',
    'sm:grid-cols-[minmax(0,0.75fr),1.25rem,minmax(0,0.75fr)]',
    'md:grid-cols-[minmax(0,1fr),1.5rem,minmax(0,1fr)]',
    'lg:grid-cols-[minmax(0,1.5fr),1.5rem,minmax(0,1fr)]',
    'xl:grid-cols-[minmax(0,2.2fr),2rem,minmax(0,0.8fr)]'
  )}
>
  {/* Station Name */}
  <div class={twMerge(
    'w-full transition-all duration-300'
  )}>
    <div class={twMerge(
      'text-sm sm:text-base md:text-lg lg:text-xl xl:text-2xl',
      `-ml-[${getOffset('base')}] sm:-ml-[${getOffset('sm')}]`,
      `md:-ml-[${getOffset('md')}] lg:-ml-[${getOffset('lg')}]`,
      `xl:-ml-[${getOffset('xl')}]`
    )}>
      <StationName name={title} client:load />
    </div>
  </div>

  {/* Station Marker */}
  <div class="relative w-full h-full flex items-center justify-center">
    <div 
      class={twMerge(
        "w-[10px] h-[1px] absolute",
        "left-1/2 -translate-x-1/2"
      )}
      style="background-color: var(--tfl-grey)"
    />
  </div>
</div>

<style>
  .subway-station {
    transition: all 0.2s ease-in-out;
  }

  .subway-station:hover {
    transform: scale(1.2);
  }

  @media (hover: hover) {
    .subway-station:hover {
      transform: scale(1.3);
    }
  }

  @media (hover: none) {
    .subway-station:active {
      transform: scale(1.2);
    }
  }

  .station-hashmark {
    background-color: #5A5A5A;
  }
</style>
