---
const { title } = Astro.props;

import { type CollectionEntry, getCollection, getEntry } from 'astro:content';
import { twMerge } from 'tailwind-merge';
import { toSlug } from '~/utils/toSlug';
import { StationPopover } from './station/StationPopover';
import StationMarker from './station/StationMarker.astro'

// Split title if longer than 17 characters
const formatTitle = (title: string) => {
  if (title.length <= 17) return title;

  // Find the last space before the 17th character
  const spaceIndex = title.substring(0, 17).lastIndexOf(' ');
  if (spaceIndex === -1) return title; // No space found, return original

  return `${title.slice(0, spaceIndex)}\n${title.slice(spaceIndex + 1)}`;
};

const formattedTitle = formatTitle(title);

// Special case mappings for titles that don't directly match their MDX files
interface TitleMapping {
  [key: string]: string
}

const TITLE_MAPPINGS: TitleMapping = {
  'Increasing Modularity': 'Law of Increasing Modularity',
}

// Load station content
const mappedTitle = TITLE_MAPPINGS[title] || title;
const slug = toSlug(mappedTitle);
let stationEntry: CollectionEntry<'stations'> | undefined;

// First try exact match
stationEntry = await getEntry('stations', slug);

// If no exact match, try to find a file that starts with the slug
if (!stationEntry) {
  const allStations = await getCollection('stations');
  const matchingStation = allStations.find((entry) => entry.id.startsWith(slug));
  if (matchingStation) {
    stationEntry = matchingStation;
  }
}

// Add interface for better type safety
interface StationError {
  code: 'STATION_NOT_FOUND'
  message: string
}

// Improve error handling
if (!stationEntry) {
  const error: StationError = {
    code: 'STATION_NOT_FOUND',
    message: `Station entry not found: ${title} (slug: ${slug})`
  }
  throw error
}

const { Content } = await stationEntry.render();

// Replace the dynamic offset calculation with Tailwind classes
const offsetClasses = {
  base: '-ml-1',
  sm: '-ml-1.5',
  md: '-ml-2',
  lg: '-ml-2.5',
  xl: '-ml-3'
}

// Remove getOffset function as it won't be needed
---

<div class="w-full">
  <div 
    class={twMerge(
      'w-auto transition-all duration-300 border-2 border-cyan-500',
      'hover:scale-120 transition-transform duration-200 ease-in-out'
    )}
  >
    <div
      class={twMerge(
        'text-sm sm:text-base md:text-lg lg:text-xl xl:text-2xl',
        offsetClasses.base,
        'sm:' + offsetClasses.sm,
        'md:' + offsetClasses.md,
        'lg:' + offsetClasses.lg,
        'xl:' + offsetClasses.xl
      )}
    >
      <StationPopover name={formattedTitle} client:load>
        {Content && <Content />}
      </StationPopover>
      <StationMarker />
    </div>
  </div>
</div>
