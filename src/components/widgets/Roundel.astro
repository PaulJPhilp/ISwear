---
interface RoundelBorderProps {
  strokeWidth: number;
  stroke: string;
}

interface RoundelPosition {
  x: number;
  y: number;
}

interface RoundelTextProps {
  text: string;
  color: string;
  class?: string;
}

interface RoundelCircleProps {
  radius: number;
  color: string;
  center: RoundelPosition;
  border?: RoundelBorderProps;
}

interface RoundelRectangleProps {
  width: number;
  height: number;
  top: number;
  left: number;
  color: string;
  border?: RoundelBorderProps;
}

interface RoundelProps {
  size: number;
  X: number;
  Y: number;
  width: number;
  height: number;
  margin?: number;
  innerCircle: RoundelCircleProps;
  outerCircle: RoundelCircleProps;
  rect: RoundelRectangleProps;
  label: RoundelTextProps;
}

export function makeRoundel(
  size: number,
  label: RoundelTextProps,
  innerCircle: RoundelCircleProps,
  outerCircle: RoundelCircleProps,
  rect: RoundelRectangleProps,
  position?: RoundelPosition
): RoundelProps {
  console.log(`makeRondel${size}, ${label}, ${innerCircle}, ${outerCircle}, ${rect}, ${position}`);
  const RoundelMargin = 0.25;
  const RoundelOuterCircleRatio = 0.8;
  const RoundelInnerCircleRatio = 0.6666666666;
  const RoundelRectHeightRatio = 0.15;

  const X = position?.x ?? 0;
  const Y = position?.y ?? 0;

  const outerCircleRadius = (size * RoundelOuterCircleRatio) / 2;

  const strokeWidth = 1;
  const Height = size * (1 + RoundelMargin);
  const Width = size * (1 + RoundelMargin);
  const RectWidth = size;
  const RectHeight = size * RoundelRectHeightRatio ;
;

  const roundel: RoundelProps = {
    size: size,
    X: X,
    Y: Y,
    height: size * (1 + RoundelMargin),
    width: size * (1 + RoundelMargin),
    margin: size * RoundelMargin,
    innerCircle: {
      radius: outerCircleRadius * RoundelInnerCircleRatio,
      color: innerCircle.color,
      center: { x: X + Height / 2, y: Y + Width / 2 },
    },

    outerCircle: {
      radius: outerCircleRadius,
      color: outerCircle.color,
      center: { x: X + Height / 2, y: Y + Width / 2 },
    },

    rect: {
      width: size,
      height: RectHeight,
      top: Y + Height / 2 - RectHeight / 2,
      left: X + Width / 2 - RectWidth / 2,

      color: rect.color,
      border: {
        strokeWidth: strokeWidth,
        stroke: rect.border?.stroke ?? rect.color,
      },
    },
    label: {
      text: label.text,
      color: label.color,
      class: 'font-sans font-bold text-lg text-center',
    },
  };

  return roundel;
}

export interface Props {
  size: number;
  X: number;
  Y: number;
  width: number;
  height: number;
  margin?: number;
  innerCircle: RoundelCircleProps;
  outerCircle: RoundelCircleProps;
  rect: RoundelRectangleProps;
  label: RoundelTextProps;
}

const roundel = Astro.props;
---

<div class="flex items-center justify-center h-full">
  <div class="border border-purple-500" style={`width: ${roundel.width}px; height: ${roundel.height}px;`}>
    <svg
      width={`${roundel.width}`}
      height={`${roundel.height}`}
      viewBox={`${roundel.X} ${roundel.Y} ${roundel.width} ${roundel.height}`}
      xmlns="http://www.w3.org/2000/svg"
    >
      <!-- Outer Circle -->
      <circle
        cx={roundel.outerCircle.center.x}
        cy={roundel.outerCircle.center.y}
        r={roundel.outerCircle.radius}
        fill={roundel.outerCircle.color}
        stroke={roundel.outerCircle.border?.stroke}
        stroke-width={roundel.outerCircle.border?.strokeWidth}></circle>

      <!-- Inner Circle -->
      <circle
        cx={roundel.innerCircle.center.x}
        cy={roundel.innerCircle.center.y}
        r={roundel.innerCircle.radius}
        fill={roundel.innerCircle.color}
        stroke={roundel.innerCircle.border?.stroke}
        stroke-width={roundel.innerCircle.border?.strokeWidth}></circle>

      <!-- Rectangle -->
      <rect
        x={roundel.rect.left}
        y={roundel.rect.top}
        width={roundel.rect.width}
        height={roundel.rect.height}
        fill={roundel.rect.color}
        stroke={roundel.rect.border?.stroke}
        stroke-width={roundel.rect.border?.strokeWidth}></rect>

      <text
        x={roundel.rect.left + roundel.rect.width / 2}
        y={roundel.rect.top + roundel.rect.height / 2}
        text-anchor="middle"
        dominant-baseline="middle"
        fill={roundel.label.color}
        font-family="sans-serif"
        font-weight="bold"
        font-size="18px"
      >
        {roundel.label.text}
      </text>
    </svg>
  </div>
</div>
